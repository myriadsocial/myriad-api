name: Release automation

on:
  release:
    types:
      - published

concurrency:
  group: release-automation

jobs:
  compute-build-info:
    runs-on: ubuntu-latest

    outputs:
      sha_short: ${{ steps.build-info.outputs.sha_short }}
      date: ${{ steps.build-info.outputs.date }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%Y%m%d')"

  build-and-publish-docker-image:
    runs-on: ubuntu-latest

    needs: compute-build-info

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-release
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: .maintain/docker/Dockerfile
          tags: |
            ${{ github.repository }}:${{ github.event.release.tag_name }}
            ${{ github.repository }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest

    needs: [compute-build-info, build-and-publish-docker-image]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.PROD_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.PROD_GCP_SA_KEY }}
          export_default_credentials: true

      - name: Get the GKE credentials
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: myriad
          location: asia-southeast2-a

      - name: Get secrets
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            FAUCET_MNEMONIC:${{ secrets.PROD_GCP_PROJECT_ID }}/FAUCET_MNEMONIC
            MONGO_USER_API:${{ secrets.PROD_GCP_PROJECT_ID }}/MONGO_USER_API
            MONGO_PASSWORD_API:${{ secrets.PROD_GCP_PROJECT_ID }}/MONGO_PASSWORD_API
            FIREBASE_SERVICE_ACCOUNT_BASE64:${{ secrets.PROD_GCP_PROJECT_ID }}/FIREBASE_SERVICE_ACCOUNT_BASE64
            TWITTER_BEARER_TOKEN:${{ secrets.PROD_GCP_PROJECT_ID }}/TWITTER_BEARER_TOKEN

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Deploy
        run: |
          helm upgrade myriad-api .maintain/kubernetes \
            --install \
            --set-string image.tag=${{ github.event.release.tag_name }} \
            --set-string config.rpcWSURL=wss://rpc.myriad.systems \
            --set-string config.faucetMnemonic="${{ steps.secrets.outputs.FAUCET_MNEMONIC }}" \
            --set config.config.rewardAmount=1 \
            --set-string config.mongo.host=myriad-db.default.svc.cluster.local \
            --set config.mongo.port=27017 \
            --set-string config.mongo.user=${{ steps.secrets.outputs.MONGO_USER_API }} \
            --set-string config.mongo.password=${{ steps.secrets.outputs.MONGO_PASSWORD_API }} \
            --set-string config.mongo.database=myriad \
            --set-string config.firebase.serviceAccountBase64=${{ steps.secrets.outputs.FIREBASE_SERVICE_ACCOUNT_BASE64 }} \
            --set-string config.twitter.bearerToken=${{ steps.secrets.outputs.TWITTER_BEARER_TOKEN }} \
            --set ingress.enabled=true \
            --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
            --set-string ingress.host=api.myriad.systems \
            --set ingress.tls=true \
            --set autoscaling.enabled=true
          kubectl rollout status deployment/myriad-api
