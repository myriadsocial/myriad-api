apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myriad-api.fullname" . }}
  labels:
    {{- include "myriad-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "myriad-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myriad-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myriad-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.config.firebase.serviceAccountBase64 }}
      volumes:
        - name: google-service-account-credentials
          secret:
            secretName: {{ include "myriad-api.firebaseSecretName" . }}
            items:
              - key: serviceAccount
                path: sa_credentials.json
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYRIAD_RPC_WS_URL
              value: {{ .Values.config.rpcWSURL }}
            {{- if .Values.config.faucetMnemonic }}
            - name: MYRIAD_FAUCET_MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: {{ include "myriad-api.faucetSecretName" . }}
                  key: faucetMnemonic
            {{- end }}
            - name: MYRIAD_REWARD_AMOUNT
              value: {{ .Values.config.rewardAmount | quote }}
            - name: ACALA_AUSD_REWARD_AMOUNT
              value: {{ .Values.config.acalaAUSDRewardAmount | quote }}
            - name: MONGO_HOST
              value: {{ .Values.config.mongo.host }}
            - name: MONGO_PORT
              value: {{ .Values.config.mongo.port | quote }}
            {{- if and .Values.config.mongo.user .Values.config.mongo.password }}
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "myriad-api.mongoSecretName" . }}
                  key: user
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "myriad-api.mongoSecretName" . }}
                  key: password
            {{- end }}
            - name: MONGO_DATABASE
              value: {{ .Values.config.mongo.database }}
            {{- if .Values.config.firebase.serviceAccountBase64 }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/google/sa_credentials.json
            {{- end }}
            - name: FIREBAE_STORAGE_BUCKET
              value: {{ .Values.config.firebase.storageBucket }}
            {{- if .Values.config.sentry.dns }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "myriad-api.sentrySecretName" . }}
                  key: dns
            {{- end }}
            {{- if .Values.config.twitter.bearerToken }}
            - name: TWITTER_BEARER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "myriad-api.twitterSecretName" . }}
                  key: bearerToken
            {{- end }}
          {{- if .Values.config.firebase.serviceAccountBase64 }}
          volumeMounts:
            - name: google-service-account-credentials
              mountPath: /etc/google
              readOnly: true
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
